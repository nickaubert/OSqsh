#!/usr/bin/perl

use warnings;
use strict;
use Term::ReadLine;

## load contents of rc file if any
#
my %rc_vars;
if ( defined $ENV{'HOME'} ) {
    my $rc_file = "$ENV{'HOME'}/.osqshrc";

    if ( -f $rc_file ) {
        open ( RCFILE , "$rc_file" ) || die "Unable to open $rc_file\n";
        while (<RCFILE>) {
            chomp;                  # no newline
            s/#.*//;                # no comments
            s/^\s+//;               # no leading white
            s/\s+$//;               # no trailing white
            next unless length;     # anything left?
            my ($var, $value) = split(/\s*=\s*/, $_, 2);
            $rc_vars{$var} = $value;
        }
    }
}

## assign variables (environment has precedence over rc file)
#
my @need_oravars = qw( 
    ORACLE_HOME
    ORACLE_SID
    ORACLE_USER
    ORACLE_PASS
    TMP_DIR
);
foreach my $this_oravar ( @need_oravars ) {
	if ( defined $ENV{"$this_oravar"} ) {
	    # good
	} elsif ( defined $rc_vars{$this_oravar} ) {
	    $ENV{"$this_oravar"} = $rc_vars{$this_oravar};
	} else {
	    print "Enter $this_oravar: ";
        my $input_var = <STDIN>;
        chomp $input_var;
        $ENV{"$this_oravar"} = $input_var;
	}
}

my $oracle_home = $ENV{'ORACLE_HOME'};
my $oracle_user = $ENV{'ORACLE_USER'};
my $oracle_pass = $ENV{'ORACLE_PASS'};
my $tmp_dir     = $ENV{'TMP_DIR'};
my $sqlplus_full = "$oracle_home/bin/sqlplus";
my $sqlplus_args = '-L -S';
if ( ! -f $sqlplus_full ) { die "No sqlplus at $sqlplus_full\n"; }
if ( ! -x $sqlplus_full ) { die "Cannot execute $sqlplus_full\n"; }

my $temp_file = "$tmp_dir/osqsh-$$.tmp";
open ( TMP_FILE , ">$temp_file" ) || die "Unable to open $temp_file\n";
chmod 0600 , $temp_file; # minimal security

## optionally load tables for tab-completion
#
my @user_tables;
if ( ( defined $rc_vars{'ENABLE_TABS'} ) and ( $rc_vars{'ENABLE_TABS'} eq 'on' ) ) {
    # print "Enable tabs!\n";
    print TMP_FILE "set head off\nselect table_name from user_tables;\nquit\n";
    my $full_cli  = "$sqlplus_full $sqlplus_args $oracle_user/$oracle_pass \@$temp_file";
    my @read_tabs = `$full_cli`;
    @user_tables = grep { /\w/ } @read_tabs;
    chomp @user_tables;
    # print "user tabs:\n@user_tables\n";
    truncate TMP_FILE,0;
    seek (TMP_FILE,0,0);
}


## load tab-completion
#
my @tab_completes;
my @nice_tabs = qw( 
    select
    from
    where
    varchar2
    exists
    number
    timestamp
    dual
    between
    exists
);
push @nice_tabs , @user_tables;
# print "nice tabs:\n@nice_tabs\n";
foreach my $this_tab ( @nice_tabs ) {
    next unless ( $this_tab =~ /\w/ );
    $this_tab =~ s/^\s//;
    $this_tab =~ s/\s$//;
    my $this_tab_uc = uc( $this_tab );
    my $this_tab_lc = lc( $this_tab );
    push @tab_completes , $this_tab_uc , $this_tab_lc;
}


## define tab completion
#
my $term = Term::ReadLine->new('OSqsh');
my $attribs = $term->Attribs;
$attribs->{completion_function} = sub {
    my ($text, $line, $start) = @_;
    return @tab_completes;
};

my $prompt = "OSQSH> ";
my @multiline_cmd;
my @presets;
while ( defined ( my $command = $term->readline($prompt)) ) {

    if ( $command =~ /^set /i ) {
        # record settings
        push @presets , $command;
    } elsif ( $command =~ /;/ ) {
        $command =~ s/;.*$/;/;
        push @multiline_cmd , $command;
        my $multiline_cmd = join ' '  , @multiline_cmd;
        my $presets       = join "\n" , @presets;
        @multiline_cmd = ();
        # $term->addhistory($multiline_cmd) if ( $command =~ /\S/ );
        print TMP_FILE "$presets\n";
        print TMP_FILE "$multiline_cmd\nquit\n";
        my $full_cli = "$sqlplus_full $sqlplus_args $oracle_user/$oracle_pass \@$temp_file";
        my $read_out = `$full_cli`;
        truncate TMP_FILE,0;
        seek (TMP_FILE,0,0);
        print "$read_out\n";
    } else {
        push @multiline_cmd , $command;
    }

}

close TMP_FILE;
unlink $temp_file;
print "\n";

